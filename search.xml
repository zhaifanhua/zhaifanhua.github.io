<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在CentOS上安装Nginx配置HTTPS并设置系统服务和开机启动（最全教程）</title>
      <link href="2021/03/15/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85Nginx%E9%85%8D%E7%BD%AEHTTPS%E5%B9%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E5%92%8C%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%EF%BC%88%E6%9C%80%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/"/>
      <url>2021/03/15/%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85Nginx%E9%85%8D%E7%BD%AEHTTPS%E5%B9%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E5%92%8C%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%EF%BC%88%E6%9C%80%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>友情提示：全部配完大约需要20分钟，本教程配合 xshell 和 xftp 使用更佳。本教程 摘繁华 版权所有。</p></blockquote><h3 id="操作按键"><a href="#操作按键" class="headerlink" title="操作按键"></a>操作按键</h3><div class="tabs" id="操作按键"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#操作按键-1">常用按键</button></li><li class="tab"><button type="button" data-href="#操作按键-2">编辑器vim按键</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="操作按键-1"><p>复制操作：<kbd>Shift</kbd>+<kbd>Ins</kbd> </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="操作按键-2"><p>开启编辑： <kbd> i </kbd> 或者 <kbd> Insert </kbd> </p><p>退出编辑： <kbd> Esc </kbd> </p><p>退出vim： <kbd>:</kbd> + <kbd>q </kbd> </p><p>保存vim： <kbd>:</kbd> + <kbd>w</kbd> </p><p>保存退出vim： <kbd>: </kbd> + <kbd>w </kbd> + <kbd>q </kbd> </p><p>不保存退出vim： <kbd>: </kbd> + <kbd>q</kbd> + <kbd>! </kbd> </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第一步：安装所需要的依赖"><a href="#第一步：安装所需要的依赖" class="headerlink" title="第一步：安装所需要的依赖"></a>第一步：安装所需要的依赖</h2><h4 id="1、所需要的依赖包括：gcc，pcre，zlib，openssl。"><a href="#1、所需要的依赖包括：gcc，pcre，zlib，openssl。" class="headerlink" title="1、所需要的依赖包括：gcc，pcre，zlib，openssl。"></a>1、所需要的依赖包括：gcc，pcre，zlib，openssl。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><div class="tabs" id="依赖"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#依赖-1">GCC库</button></li><li class="tab"><button type="button" data-href="#依赖-2">PCRE库</button></li><li class="tab"><button type="button" data-href="#依赖-3">ZLIB库</button></li><li class="tab"><button type="button" data-href="#依赖-4">OpenSSL库</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="依赖-1"><p><strong>GCC库</strong>（用来编译下载下来的 nginx 源码）</p><p>GCC  是 Linux 下最主要的编译工具，GCC 不仅功能非常强大，结构也非常灵活。它可以通过不同的前端模块来支持各种语言，如 Java、Fortran、Pascal、Modula-3 和 Ada。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依赖-2"><p><strong>PCRE库</strong>（ rewrite 模块需要 pcre 库）</p><p>PCRE 支持正则表达式。如果我们在配置文件 nginx.conf 中使用了正则表达式，那么在编译 Nginx 时就必须把PCRE库编译进 Nginx，因为 Nginx 的 HTTP 模块需要靠它来解析正则表达式。另外，pcre-devel 是使用PCRE做二次开发时所需要的开发库，包括头文件等，这也是编译 Nginx 所必须使用的。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依赖-3"><p><strong>ZLIB库</strong>（ gzip 模块需要 zlib 库）<br>zlib 提供了很多压缩和解方式，用于对 HTTP 包的内容做 gzip 格式的压缩，如果我们在 nginx.conf 中配置了 gzip on，并指定对于某些类型（content-type）的HTTP响应使用 gzip 来进行压缩以减少网络传输量，则在编译时就必须把 zlib 编译进 Nginx。zlib-devel 是二次开发所需要的库。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依赖-4"><p><strong>OpenSSL库</strong>（SSL功能需要 openssl 库）<br>openssl 是一个安全套接字层密码库，如果服务器不只是要支持 HTTP，还需要在更安全的 SSL 协议上传输 HTTP，那么需要拥有 OpenSSL。另外，如果我们想使用 MD5、SHA1 等散列函数，那么也需要安装它。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>显示以下结果表示安装完成。</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210312142614045.png" alt="image-20210312142614045"></p><h2 id="第二步：升级-openssl-非必需"><a href="#第二步：升级-openssl-非必需" class="headerlink" title="第二步：升级 openssl 非必需"></a>第二步：升级 openssl 非必需</h2><blockquote><p>这个不是必需！不想升级可直接跳第三步，怕麻烦最好不升级，不升级也可以用，因为升级我踩过好多坑。</p></blockquote><p>yum安装的 openssl ，版本比较低，我们可以通过以下命令查看 openssl 的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl version -a</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210313215300685.png" alt="image-20210313215300685"></p><blockquote><p>openssl 的版本是 1.0.2k，这个是2017年发布的，已经有点老了，我们下载最新版本。</p></blockquote><h4 id="1、进入-openssl官网-查看版本，这里我下载的是-openssl-1-1-1j-tar-gz-。"><a href="#1、进入-openssl官网-查看版本，这里我下载的是-openssl-1-1-1j-tar-gz-。" class="headerlink" title="1、进入 openssl官网 查看版本，这里我下载的是 openssl-1.1.1j.tar.gz  。"></a>1、进入 <a href="http://www.openssl.org/source/">openssl官网</a> 查看版本，这里我下载的是 <a href="https://www.openssl.org/source/openssl-1.1.1j.tar.gz">openssl-1.1.1j.tar.gz</a>  。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">wget https:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.1.1j.tar.gz</span><br></pre></td></tr></table></figure><h4 id="2、解压-openssl-1-1-1j-tar-gz-并进入解压目录。"><a href="#2、解压-openssl-1-1-1j-tar-gz-并进入解压目录。" class="headerlink" title="2、解压 openssl-1.1.1j.tar.gz 并进入解压目录。"></a>2、解压 openssl-1.1.1j.tar.gz 并进入解压目录。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf openssl-1.1.1j.tar.gz</span><br><span class="line">cd openssl-1.1.1j</span><br></pre></td></tr></table></figure><h4 id="3、进行重新编译-openssl-。"><a href="#3、进行重新编译-openssl-。" class="headerlink" title="3、进行重新编译 openssl 。"></a>3、进行重新编译 openssl 。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;config shared zlib</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><blockquote><p>此过程需要 3 分钟左右……</p></blockquote><p>编译完成后以下图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314003448904.png" alt="image-20210314003448904"></p><h4 id="4、备份当前openssl。"><a href="#4、备份当前openssl。" class="headerlink" title="4、备份当前openssl。"></a>4、备份当前openssl。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv &#x2F;usr&#x2F;bin&#x2F;openssl &#x2F;usr&#x2F;bin&#x2F;openssl.bak</span><br><span class="line">mv &#x2F;usr&#x2F;include&#x2F;openssl &#x2F;usr&#x2F;include&#x2F;openssl.bak</span><br></pre></td></tr></table></figure><h4 id="5、配置使用新版本："><a href="#5、配置使用新版本：" class="headerlink" title="5、配置使用新版本："></a>5、配置使用新版本：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;openssl &#x2F;usr&#x2F;bin&#x2F;openssl</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;include&#x2F;openssl &#x2F;usr&#x2F;include&#x2F;openssl</span><br></pre></td></tr></table></figure><h4 id="6、更新动态链接库数据："><a href="#6、更新动态链接库数据：" class="headerlink" title="6、更新动态链接库数据："></a>6、更新动态链接库数据：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&#x2F;usr&#x2F;local&#x2F;lib64&#x2F;&quot; &gt;&gt; &#x2F;etc&#x2F;ld.so.conf</span><br></pre></td></tr></table></figure><p>重新加载动态链接库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure><h4 id="7、重新查看版本号进行验证："><a href="#7、重新查看版本号进行验证：" class="headerlink" title="7、重新查看版本号进行验证："></a>7、重新查看版本号进行验证：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl version -a</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314013041087.png" alt="image-20210314013041087"></p><h4 id="8、为适应NGINX编译需要设置参数，需要修改openss路径，不然会出现找不到openssl目录的问题。"><a href="#8、为适应NGINX编译需要设置参数，需要修改openss路径，不然会出现找不到openssl目录的问题。" class="headerlink" title="8、为适应NGINX编译需要设置参数，需要修改openss路径，不然会出现找不到openssl目录的问题。"></a>8、为适应NGINX编译需要设置参数，需要修改openss路径，不然会出现找不到openssl目录的问题。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd auto&#x2F;lib&#x2F;openssl</span><br><span class="line">cp conf &#x2F;mnt&#x2F;</span><br><span class="line">vim conf</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CORE_INCS&#x3D;&quot;$CORE_INCS $OPENSSL&#x2F;.openssl&#x2F;include&quot;</span><br><span class="line">CORE_DEPS&#x3D;&quot;$CORE_DEPS $OPENSSL&#x2F;.openssl&#x2F;include&#x2F;openssl&#x2F;ssl.h&quot;</span><br><span class="line">CORE_LIBS&#x3D;&quot;$CORE_LIBS $OPENSSL&#x2F;.openssl&#x2F;lib&#x2F;libssl.a&quot;</span><br><span class="line">CORE_LIBS&#x3D;&quot;$CORE_LIBS $OPENSSL&#x2F;.openssl&#x2F;lib&#x2F;libcrypto.a&quot;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CORE_INCS&#x3D;&quot;$CORE_INCS $OPENSSL&#x2F;include&quot;</span><br><span class="line">CORE_DEPS&#x3D;&quot;$CORE_DEPS $OPENSSL&#x2F;include&#x2F;openssl&#x2F;ssl.h&quot;</span><br><span class="line">CORE_LIBS&#x3D;&quot;$CORE_LIBS $OPENSSL&#x2F;lib&#x2F;libssl.a&quot;</span><br><span class="line">CORE_LIBS&#x3D;&quot;$CORE_LIBS $OPENSSL&#x2F;lib&#x2F;libcrypto.a&quot;</span><br></pre></td></tr></table></figure><h4 id="9、建立libssl-a和libcrypto-a的软连接。"><a href="#9、建立libssl-a和libcrypto-a的软连接。" class="headerlink" title="9、建立libssl.a和libcrypto.a的软连接。"></a>9、建立libssl.a和libcrypto.a的软连接。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;ssl&#x2F;lib</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;lib64&#x2F;libssl.a &#x2F;usr&#x2F;local&#x2F;ssl&#x2F;lib&#x2F;libssl.a</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;lib64&#x2F;libcrypto.a &#x2F;usr&#x2F;local&#x2F;ssl&#x2F;lib&#x2F;libcrypto.a</span><br></pre></td></tr></table></figure><h4 id="10、建立软连接openssl后，-usr-local-ssl-下没有include路径，需重新指向。"><a href="#10、建立软连接openssl后，-usr-local-ssl-下没有include路径，需重新指向。" class="headerlink" title="10、建立软连接openssl后，/usr/local/ssl/下没有include路径，需重新指向。"></a>10、建立软连接openssl后，/usr/local/ssl/下没有include路径，需重新指向。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;include&#x2F; &#x2F;usr&#x2F;local&#x2F;ssl&#x2F;include</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><h2 id="第三步：正式安装Nginx"><a href="#第三步：正式安装Nginx" class="headerlink" title="第三步：正式安装Nginx"></a>第三步：正式安装Nginx</h2><h4 id="1、先进入到-usr-local-目录，创建并进入-nginx-目录。"><a href="#1、先进入到-usr-local-目录，创建并进入-nginx-目录。" class="headerlink" title="1、先进入到 usr/local 目录，创建并进入 nginx 目录。"></a>1、先进入到 usr/local 目录，创建并进入 nginx 目录。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">mkdir nginx</span><br><span class="line">cd nginx</span><br></pre></td></tr></table></figure><h4 id="2、通过-wget-命令在线获取到-nginx-的安装包，这里我选择的是-nginx-1-17-7-这个版本，命令是："><a href="#2、通过-wget-命令在线获取到-nginx-的安装包，这里我选择的是-nginx-1-17-7-这个版本，命令是：" class="headerlink" title="2、通过 wget 命令在线获取到 nginx 的安装包，这里我选择的是 nginx-1.17.7 这个版本，命令是："></a>2、通过 wget 命令在线获取到 nginx 的安装包，这里我选择的是 nginx-1.17.7 这个版本，命令是：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.17.7.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>最新版本可以直接点直通车查看：<a href="https://nginx.org/download">nginx下载地址</a></p></blockquote><h4 id="3、解压-nginx-1-17-7-tar-gz。"><a href="#3、解压-nginx-1-17-7-tar-gz。" class="headerlink" title="3、解压 nginx-1.17.7.tar.gz。"></a>3、解压 nginx-1.17.7.tar.gz。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.17.7.tar.gz</span><br></pre></td></tr></table></figure><h4 id="4、进入刚刚解压的文件夹nginx-1-17-7进行安装。"><a href="#4、进入刚刚解压的文件夹nginx-1-17-7进行安装。" class="headerlink" title="4、进入刚刚解压的文件夹nginx-1.17.7进行安装。"></a>4、进入刚刚解压的文件夹nginx-1.17.7进行安装。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.17.7</span><br></pre></td></tr></table></figure><h4 id="5、使用–prefix参数指定nginx安装的目录。"><a href="#5、使用–prefix参数指定nginx安装的目录。" class="headerlink" title="5、使用–prefix参数指定nginx安装的目录。"></a>5、使用–prefix参数指定nginx安装的目录。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module</span><br></pre></td></tr></table></figure><h4 id="6、用make、make-install安装，安装命令。"><a href="#6、用make、make-install安装，安装命令。" class="headerlink" title="6、用make、make install安装，安装命令。"></a>6、用make、make install安装，安装命令。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>显示以下结果表示安装完成。</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314050029293.png" alt="image-20210314050029293"></p><h4 id="7、查看nginx版本。"><a href="#7、查看nginx版本。" class="headerlink" title="7、查看nginx版本。"></a>7、查看nginx版本。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -V</span><br></pre></td></tr></table></figure><p>看到版本号为 1.17.7，各个模块也安装正常。</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314050114769.png" alt="image-20210314050114769"></p><p>执行完成后看看Nginx安在什么地方了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure><p>可以看到，我的nginx是安装在了 /usr/local/nginx。</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314050157365.png" alt="image-20210314050157365"></p><h4 id="8、运行命令启动nginx。"><a href="#8、运行命令启动nginx。" class="headerlink" title="8、运行命令启动nginx。"></a>8、运行命令启动nginx。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx</span><br></pre></td></tr></table></figure><h4 id="9、用ps命令看看nginx进程跑起来没有。"><a href="#9、用ps命令看看nginx进程跑起来没有。" class="headerlink" title="9、用ps命令看看nginx进程跑起来没有。"></a>9、用ps命令看看nginx进程跑起来没有。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>跑起来了，说明安装没有问题。</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314050237838.png" alt="image-20210314050237838"></p><h2 id="第四步：验证是否成功安装"><a href="#第四步：验证是否成功安装" class="headerlink" title="第四步：验证是否成功安装"></a>第四步：验证是否成功安装</h2><h4 id="1、现在在浏览器输入ip地址或者localhost，就能看到Nginx的欢迎界面了。"><a href="#1、现在在浏览器输入ip地址或者localhost，就能看到Nginx的欢迎界面了。" class="headerlink" title="1、现在在浏览器输入ip地址或者localhost，就能看到Nginx的欢迎界面了。"></a>1、现在在浏览器输入ip地址或者localhost，就能看到Nginx的欢迎界面了。</h4><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210312152634185.png" alt="image-20210312152634185"></p><p>到此，Nginx成功完成安装！接下来就是配置nginx让别人能访问到你的网站。</p><h2 id="第五步：配置nginx"><a href="#第五步：配置nginx" class="headerlink" title="第五步：配置nginx"></a>第五步：配置nginx</h2><h4 id="1、打开文件夹-usr-local-nginx-conf-，查看目录结构。"><a href="#1、打开文件夹-usr-local-nginx-conf-，查看目录结构。" class="headerlink" title="1、打开文件夹 /usr/local/nginx/conf ，查看目录结构。"></a>1、打开文件夹 /usr/local/nginx/conf ，查看目录结构。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210312160909002.png" alt="image-20210312160909002"></p><p>可以看到里面有nginx.conf这个文件，使用命令 vim 打开时是这样的</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210312161955404.png" alt="image-20210312161955404"></p><p><code>后面要用到的链接</code><span id="shuoming">说明文件</span></p><p>这里有必要对nginx.conf说明一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1; # 工作进程：数目。根据硬件调整，通常等于cpu数量或者2倍cpu数量。</span><br><span class="line"></span><br><span class="line">#错误日志存放路径。</span><br><span class="line">#error_log  logs&#x2F;error.log;</span><br><span class="line">#error_log  logs&#x2F;error.log  notice;</span><br><span class="line">#error_log  logs&#x2F;error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs&#x2F;nginx.pid; # nginx进程pid存放路径。</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024; # 工作进程的最大连接数量。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types; # 指定mime类型，由mime.type来定义。</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    # 日志格式设置</span><br><span class="line">    #log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line">    #                  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line">    #                  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line">    # 用log_format指令设置日志格式后，需要用access_log来指定日志文件存放路径。</span><br><span class="line">    #access_log  logs&#x2F;access.log  main;</span><br><span class="line"></span><br><span class="line">    # 指定nginx是否调用sendfile函数来输出文件，对于普通应用，必须设置on。如果用来进行下载等应用磁盘io重负载应用，可设着off，以平衡磁盘与网络io处理速度，降低系统uptime。</span><br><span class="line">    sendfile        on;</span><br><span class="line">    # 此选项允许或禁止使用socket的TCP_CORK的选项，此选项仅在sendfile的时候使用。</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    </span><br><span class="line">    # keepalive超时时间。</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    # 开启gzip压缩服务。</span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    # 虚拟主机。</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;  # 配置监听端口号。</span><br><span class="line">        server_name  localhost;  # 配置访问域名，域名可以有多个，用空格隔开。</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;  # 字符集设置。</span><br><span class="line"></span><br><span class="line">        #access_log  logs&#x2F;host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # 错误跳转页。</span><br><span class="line">        #error_page  404              &#x2F;404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">        location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        # 请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        </span><br><span class="line">        #    root           html; # 根目录。</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000; # 请求转向定义的服务器列表。</span><br><span class="line">        #    fastcgi_index  index.php; # 如果请求的Fastcgi_index URI是以 &#x2F; 结束的, 该指令设置的文件会被附加到URI的后面并保存在变量$fastcig_script_name中。</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#39;s document root</span><br><span class="line">        # concurs with nginx&#39;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ &#x2F;\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location &#x2F; &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl; # 监听端口。</span><br><span class="line">    #    server_name  localhost; # 域名。</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem; # 证书位置。</span><br><span class="line">    #    ssl_certificate_key  cert.key; # 私钥位置。</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5; # 密码加密方式。</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location &#x2F; &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、在这里建议将现有的nginx-conf文件复制一份出来并重命名为nginx-conf-bak文件，方便以后配置错了恢复。"><a href="#2、在这里建议将现有的nginx-conf文件复制一份出来并重命名为nginx-conf-bak文件，方便以后配置错了恢复。" class="headerlink" title="2、在这里建议将现有的nginx.conf文件复制一份出来并重命名为nginx.conf.bak文件，方便以后配置错了恢复。"></a>2、在这里建议将现有的nginx.conf文件复制一份出来并重命名为nginx.conf.bak文件，方便以后配置错了恢复。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -b &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf.bak</span><br></pre></td></tr></table></figure><h4 id="3、然后打开-usr-local-nginx-conf-看看目录结构，发现已经复制好了"><a href="#3、然后打开-usr-local-nginx-conf-看看目录结构，发现已经复制好了" class="headerlink" title="3、然后打开 /usr/local/nginx/conf 看看目录结构，发现已经复制好了"></a>3、然后打开 /usr/local/nginx/conf 看看目录结构，发现已经复制好了</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210314050447427.png" alt="image-20210314050447427"></p><p>这时后就可以安心修改nginx.conf文件了！注：上面的说明文件和conf源文件一模一样，我只是加了注释，放心复制。</p><h4 id="4、直接在本地创建一个空-nginx-conf-文件，复制上面-说明文件的代码，按照我的注释配置你的网站："><a href="#4、直接在本地创建一个空-nginx-conf-文件，复制上面-说明文件的代码，按照我的注释配置你的网站：" class="headerlink" title="4、直接在本地创建一个空 nginx.conf 文件，复制上面 说明文件的代码，按照我的注释配置你的网站："></a>4、直接在本地创建一个空 nginx.conf 文件，复制上面 <a href="#shuoming">说明文件</a>的代码，按照我的注释配置你的网站：</h4><blockquote><p>一般情况下只需要在最后一个}之前添加server配置就可以了</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210313170838307.png" alt="image-20210313170838307"></p><p>比如我的个人主页网站配置如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210315063102695.png" alt="image-20210315063102695"></p><p>下面说说我为什么这么配置（如果你的网站不需要https访问，这一步可以忽略）。</p><blockquote><p>现在网站 https 已经是标配，这个配置还是很重要的。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># -------------------http-----------------------</span><br><span class="line">    # -------------配置跳转https-------------</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name *.zhaifanhua.cn;</span><br><span class="line">        return 301 https:&#x2F;&#x2F;$http_host$request_uri;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面的配置是为了 http 跳转为 https ，当访问 80 端口时 nginx 自动转发为已经存在配置网址的 443 端口。比如别人访问网站 <a href="http://zhaifanhua.cn/">http://zhaifanhua.cn</a> 会自动跳转为 <a href="https://zhaifanhua.cn/">https://zhaifanhua.cn</a> 。</p><p>这里我设置为 *.zhaifanhua.cn 是因为我有很多站点都需要跳转为 https 协议访问，并且我的证书是泛域名解析，干脆用通配符 * 来配置一劳永逸。这样访问任何前缀的域名都可以跳转为 https 协议了。</p></blockquote><p>下面就是正式配置网站目录和证书了，一下内容将参数 server_name、ssl_certificate、ssl_certificate_key、location 下的 root 修改你自己的域名和路径即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># -------------------https-----------------------</span><br><span class="line">    # -------------摘繁华主页------------------</span><br><span class="line">    server &#123;</span><br><span class="line">        listen443 ssl;</span><br><span class="line">        server_namezhaifanhua.cn www.zhaifanhua.cn;</span><br><span class="line">        # 证书位置</span><br><span class="line">        ssl_certificate&#x2F;home&#x2F;ssl&#x2F;zhaifanhua.cn&#x2F;full_chain.pem;</span><br><span class="line">        # 私钥位置</span><br><span class="line">        ssl_certificate_key&#x2F;home&#x2F;ssl&#x2F;zhaifanhua.cn&#x2F;private.key;</span><br><span class="line">        # 开启HSTS</span><br><span class="line">        add_header Strict-Transport-Security &quot;max-age&#x3D;63072000&quot; always;</span><br><span class="line">        # 装订在线证书状态协议</span><br><span class="line">        ssl_stapling            on;</span><br><span class="line">        ssl_stapling_verify     on;</span><br><span class="line">        # 配置会话缓存</span><br><span class="line">        ssl_session_cacheshared:SSL:1m;</span><br><span class="line">        ssl_session_timeout5m;</span><br><span class="line">        # 配置协议</span><br><span class="line">        ssl_protocolsTLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        # 配置加密套件</span><br><span class="line">        ssl_ciphersECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line"></span><br><span class="line">        # 根目录</span><br><span class="line">        root                    &#x2F;home&#x2F;www&#x2F;www;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="5、修改完成后保存，然后用xftp上传到-usr-local-nginx-conf-目录进行覆盖源文件，然后判断配置文件是否正确，有successful表示可用。"><a href="#5、修改完成后保存，然后用xftp上传到-usr-local-nginx-conf-目录进行覆盖源文件，然后判断配置文件是否正确，有successful表示可用。" class="headerlink" title="5、修改完成后保存，然后用xftp上传到 /usr/local/nginx/conf 目录进行覆盖源文件，然后判断配置文件是否正确，有successful表示可用。"></a>5、修改完成后保存，然后用xftp上传到 /usr/local/nginx/conf 目录进行覆盖源文件，然后判断配置文件是否正确，有successful表示可用。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -t</span><br></pre></td></tr></table></figure><h4 id="6、配置正确后，重启-nginx-重新加载配置文件使配置生效："><a href="#6、配置正确后，重启-nginx-重新加载配置文件使配置生效：" class="headerlink" title="6、配置正确后，重启 nginx 重新加载配置文件使配置生效："></a>6、配置正确后，重启 nginx 重新加载配置文件使配置生效：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload</span><br></pre></td></tr></table></figure><h4 id="7、这时候访问网站已经出现了锁，说明-https-开启成功。"><a href="#7、这时候访问网站已经出现了锁，说明-https-开启成功。" class="headerlink" title="7、这时候访问网站已经出现了锁，说明 https 开启成功。"></a>7、这时候访问网站已经出现了锁，说明 https 开启成功。</h4><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210315005057299.png" alt="image-20210315005057299"></p><h2 id="第六步：配置为系统服务"><a href="#第六步：配置为系统服务" class="headerlink" title="第六步：配置为系统服务"></a>第六步：配置为系统服务</h2><h4 id="1、在系统服务目录里创建-nginx-service-文件。"><a href="#1、在系统服务目录里创建-nginx-service-文件。" class="headerlink" title="1、在系统服务目录里创建 nginx.service 文件。"></a>1、在系统服务目录里创建 nginx.service 文件。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service</span><br></pre></td></tr></table></figure><p>写入内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;nginx</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx</span><br><span class="line">ExecReload&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload</span><br><span class="line">ExecStop&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s quit</span><br><span class="line">PrivateTmp&#x3D;true</span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><blockquote><p>[Unit] 服务的说明<br>Description 描述服务<br>After 描述服务类别<br>[Service] 服务运行参数的设置<br>Type=forking 是后台运行的形式<br>ExecStart 为服务的具体运行命令<br>ExecReload 为重启命令<br>ExecStop 为停止命令<br>PrivateTmp=True 表示给服务分配独立的临时空间<br>[Install] 运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</p></blockquote><p>注意：[Service]的启动、重启、停止命令全部要求使用绝对路径，保存退出。</p><h4 id="2、设置用户的权限，重新加载-nginx-service-文件"><a href="#2、设置用户的权限，重新加载-nginx-service-文件" class="headerlink" title="2、设置用户的权限，重新加载 nginx.service 文件"></a>2、设置用户的权限，重新加载 nginx.service 文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 .&#x2F;nginx.service</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h4 id="3、杀死-nginx-重启nginx"><a href="#3、杀死-nginx-重启nginx" class="headerlink" title="3、杀死 nginx 重启nginx"></a>3、杀死 nginx 重启nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 nginx</span><br><span class="line">systemctl restart nginx</span><br><span class="line">ps aux | grep nginx</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210315025038577.png" alt="image-20210315025038577"></p><p>说明配置系统服务成功！</p><h4 id="4、设置开机自启动"><a href="#4、设置开机自启动" class="headerlink" title="4、设置开机自启动"></a>4、设置开机自启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://blog.zhaifanhua.com/blogimg/img/image-20210315025338229.png" alt="image-20210315025338229"></p><p>说明开机自启动设置成功！</p><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 启动nginx服务</span><br><span class="line">service nginx start</span><br><span class="line">systemctl start nginx.service</span><br><span class="line"># 查看nginx状态</span><br><span class="line">service nginx status</span><br><span class="line">systemctl status nginx.service</span><br><span class="line"># 重启nginx服务</span><br><span class="line">service nginx reload</span><br><span class="line">systemctl restart nginx.service　</span><br><span class="line"># 停止nginx服务</span><br><span class="line">service nginx stop</span><br><span class="line">systemctl stop nginx.service</span><br><span class="line"></span><br><span class="line"># 设置开机自启动</span><br><span class="line">systemctl enable nginx.service</span><br><span class="line"># 停止开机自启动</span><br><span class="line">systemctl disable nginx.service</span><br><span class="line"></span><br><span class="line"># 查看所有已启动的服务</span><br><span class="line">systemctl list-units --type&#x3D;service</span><br></pre></td></tr></table></figure><h2 id="致谢及彩蛋"><a href="#致谢及彩蛋" class="headerlink" title="致谢及彩蛋"></a>致谢及彩蛋</h2><ul><li>这篇文章写了整整两天，希望能为你带来帮助。由于知识水平有限，本文难免有不足之处，诚请各位同行提出批评和指正。</li><li>配置功能可能需要没多长时间，但为了能让读者尽可能一次配置成功，查了无数的资料，也实验了好几遍……还是蛮累的，不要忘了一件三连哦！</li></ul><p>彩蛋 ：写这篇文章之前，我的域名开了CDN加速，原本我的nginx是配置好的，我更新了我的网站程序后，怎么刷新内容都不变，我还以为我的nginx出错了，而且考虑到我的服务器好长时间没有清理了，直接TMD把服务器重装了，结果忘了备份一个重要的数据库，导致所有资料都没了，你能想到我当时的心情了吧！！！！不过要是没有重装，我也不会写这篇文章了，哈哈哈哈……欲知后文，请关注我或者任何搜索引擎搜索“摘繁华”就能找到我，嘻嘻。</p><blockquote><p>如果你觉得这篇文章还不错，请动动小指头点赞、收藏和关注哦！若本文带给你很大帮助，也可以打赏博主一杯可乐:tea:ღゝ◡╹)ノ♡<br>摘繁华版权所有，转发或引用请附上原文链接哦！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Nginx </tag>
            
            <tag> HTTPS </tag>
            
            <tag> 网站配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/03/14/hello-world/"/>
      <url>2021/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>道不同不相为谋，亦各从其志也。</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>愚之自鉴，喜逢同道中人。</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>摘繁华 zhaifanhua<br>白衣无尘，亦如初见。陇右人士，喜古风与汉服。 相互珍重，各自安好。<br>The white clothes are dust- free,as if we first met.I was born in Gansu, China,and like ancient customs and Han Dynasty Clothing.Cherish each other and everything goes smoothly for you and me.</p></blockquote><p>你好，这里摘繁华。<br>受德于儒之“怒道”、“民主”、“仁德”，道之“辩证”、“道法自然”，墨之“科学”、“兼爱”、“尚贤”，法之“唯物”。<br>崇尚自然人文，追求精神自由，热爱汉服和古风文化。<br>对有趣的世界和可能有趣的你感到好奇，对世界保持高度的敏感性和关注度，正在尝试从事互联网产品及网站开发相关工作。<br>若热爱古风，你将成为我最敬重的朋友。如果你同样有兴趣了解我，请关注我的博客。<br>—————————喜欢—————————<br>——-演员——-<br>六小龄童（孙悟空） 靳东 赵丽颖 王宝强 李幼斌（李云龙）  游本昌（济公） 谢孟伟（张嘎） 张一山（刘星）<br>——-歌手——-<br>刘珂矣 李健 邓紫棋 胡彦斌 萨顶顶 华晨宇 毛不易 刀郎 叶里 周深<br>——-电影——-<br>天空之眼 海上钢琴师<br>——-电视剧——-<br>西游记 水浒传 红楼梦 三国演义<br>——-音乐——-<br>半壶纱<br>——-纪录片——-<br>《航拍中国》 《舌尖上的中国》</p><p>正在完善中……</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>既遇桃园，处处志之。</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>居必择乡，游必择士。</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="友链信息"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#友链信息-1">友链要求</button></li><li class="tab"><button type="button" data-href="#友链信息-2">本站信息</button></li><li class="tab"><button type="button" data-href="#友链信息-3">申请格式</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="友链信息-1"><blockquote><p>1、使用独立域名且全站 SSL 加密，站点稳定运行，在百度、谷歌等各大搜索引擎中能够正常收录；<br>2、站点性质为非商业性的个人博客或古风文学类网站，凡内容污秽、暴力、广告、盗版、破解、网页植入脚本、极低质量内容、违背道德的勿扰；<br>3、博友能长期互访，尊重创作版权，参考内容写清来源的；<br>4、单项友链、长期未更新或无法访问、单方面移除本站链接等，将直接移除，恕不另行通知，敬请谅解。</p></blockquote><p>喜欢文学、古风或汉服其一者，无视以上，直接添加。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="友链信息-2"><blockquote><p>站点名称：摘繁华博客<br>站点描述：白衣无尘，亦如初见。<br>站点链接：<a href="https://blog.zhaifanhua.com/">https://blog.zhaifanhua.com</a><br>图标链接：建议使用全球通用头像Gravatar链接<br>    Gravatar：<a href="https://s.gravatar.com/avatar/bcd6dd5e3a4bfade22b7ec6dcad556a9?s=200">https://s.gravatar.com/avatar/bcd6dd5e3a4bfade22b7ec6dcad556a9?s=200</a><br>   jpg：<a href="https://cdn.zhaifanhua.com/static/img/logo/avatar.jpg">https://cdn.zhaifanhua.com/static/img/logo/avatar.jpg</a><br>    png：<a href="https://cdn.zhaifanhua.com/static/img/logo/avatar.png">https://cdn.zhaifanhua.com/static/img/logo/avatar.png</a><br>    ico：<a href="https://cdn.zhaifanhua.com/static/img/logo/favicon.ico">https://cdn.zhaifanhua.com/static/img/logo/favicon.ico</a></p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="友链信息-3"><p>确认您满足友链要求后，在添加本站链接后按照下面格式在留言申请友链，我会第一时间添加您的站点。</p><blockquote><p>站点名称：您的站点名称；<br>站点描述：您的站点描述；<br>站点链接：您的站点链接；<br>图标链接：您的站点图标链接，建议填写全球通用头像Gravatar链接。</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
    </entry>
    
    
  
</search>
